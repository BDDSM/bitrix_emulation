Функция __Описание()
	
	//UPD: еще описание https://dev.1c-bitrix.ru/community/webdev/user/30123/blog/11416/
	
	//Последовательность загрузки в общем виде такова:
	
	// 1. GET /upload?type=catalog&mode=checkauth
	// Ждет в ответ "success"
	
	// 2. GET /upload?type=catalog&mode=init
	// Ждет в ответ примерно такое:
	// zip=yes
	// file_limit=-1
	
	// 3. POST /upload?type=catalog&mode=file&filename=v8_A7D2_69.zip
	// Ждет в ответ "success"
	
	// 4. GET /upload?type=catalog&mode=import&filename=v8_A7D2_69.zip
	// Ждет в ответ "success", когда файл наконец будет обработан Битриксом. Выполняется до тех пор, пока сервер отвечает "progress".
	// Дальше сервер должен ответить "success" или "failure". Это важно, чтоб клиент не повис намертво, там даже в ОФ нет ОбработкаПрерыванияПользователя!!!
	
	//Одновременный импорт с нескольких машин вроде как не допускается. Возможно, стоит подумать о его жестком запрете.
	//Нарезка файла на куски пока не задействована. Смотреть встроенную функцию "РазделитьФайл" и ее зеркало
	
КонецФункции

Функция rootGET(Запрос)
	
	ЗаписатьСодержаниеЗапросаВЖурнал(Запрос,"GET");
	
	Если НЕ Запрос.ПараметрыЗапроса.Получить("type") = "catalog" Тогда
		
		//не умеем такое обрабатывать
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.УстановитьТелоИзСтроки("Умеем работать только в режиме выгрузки каталога, ничего более");
		Возврат Ответ;
		
	КонецЕсли;	
	
	Если Запрос.ПараметрыЗапроса.Получить("mode") = "checkauth" Тогда
		//?type=catalog&mode=checkauth
		
		//проверить корректность и написать в ответ "success" (это точно) либо "fail" (предполагаю)
		//пока просто будем считать, что все ок всегда
		
		ТекстОтвета = "success";//успешно
		ТекстОтвета = ТекстОтвета+Символы.ПС+"uploadId";//в модуле выгрузки искать переменную "КукиИмя"
		ТекстОтвета = ТекстОтвета+Символы.ПС+СтрЗаменить(Новый УникальныйИдентификатор(),"-","_");//"КукиЗначение" - это будет чем-то вроде ID задания
		
		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.УстановитьТелоИзСтроки(ТекстОтвета);
		
	ИначеЕсли Запрос.ПараметрыЗапроса.Получить("mode") = "init" Тогда
		//?type=catalog&mode=init
		//здесь надо рассказать получателю, как мы умеем работать
		
		ТекстОтвета = "zip=yes";//разрешим сжатие файлов
		ТекстОтвета = ТекстОтвета+Символы.ПС+"file_limit=-1";//без ограничений
//		ТекстОтвета = ТекстОтвета+Символы.ПС+"file_limit=10240";//по частям. Здесь надо как-то умудриться в POST запросе добавлять куски файла к исходному. Но лучше это оставить на потом.
		
		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.УстановитьТелоИзСтроки(ТекстОтвета);
		
	ИначеЕсли Запрос.ПараметрыЗапроса.Получить("mode") = "import" Тогда
		//?type=catalog&mode=import&filename=import.xml
		//получатель интересуется, обработали ли мы его файл полностью.
		//Внимание! Он спрашивает не имя куска и не имя архива, а конкретный файл внутри архива
		
		ТекстОтвета = СостояниеЗаданияОбмена(ИДСеансаИзЗаголовков(Запрос.Заголовки),Запрос.ПараметрыЗапроса.Получить("filename"));
		//Разумеется, названия файлов могут пересекаться по пользователям. Надо писать прямо в какую-то таблицу/РС.
		
		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.УстановитьТелоИзСтроки(ТекстОтвета);
		
	Иначе //ну просто так
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.УстановитьТелоИзСтроки("unknown command");
		
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

Функция rootPOST(Запрос)
	
	ЗаписатьСодержаниеЗапросаВЖурнал(Запрос,"POST");
	
	Если Запрос.ПараметрыЗапроса.Получить("mode") = "file" Тогда
		//?type=catalog&mode=file&filename=v8_A7D2_69.zip
		
		//здесь надо просто забрать файл
		ИмяФайла=Запрос.ПараметрыЗапроса.Получить("filename");
		
		ДД=Запрос.ПолучитьТелоКакДвоичныеДанные();
		
		ИмяСохраненногоФайла = КаталогСохраненияПолученныхФайлов()+ИмяФайла;
		ДД.Записать(ИмяСохраненногоФайла);
		//Теперь надо как-то умудриться обработать этот файл, с привязкой к конкретной компании и каталогу.
		//А после обработки уведомить об этом клиента, если он еще тут.
		
		НачатьОбработкуФайлов(ИмяСохраненногоФайла,ИДСеансаИзЗаголовков(Запрос.Заголовки));//Фоновое задание, видимо
		
		СтрокаПараметров = "success";
		
		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.УстановитьТелоИзСтроки(СтрокаПараметров);
		Возврат Ответ;
		
	Иначе
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.УстановитьТелоИзСтроки("unknown command");
		Возврат Ответ;
		
	КонецЕсли;
	
КонецФункции

Функция СтруктураВСтроку(Структура)
	
	Результат = "";
	
	Для Каждого Эл Из Структура Цикл
		Результат = Результат+?(Результат="","?","&")+Эл.Ключ+"="+Эл.Значение;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции	

Функция КаталогСохраненияПолученныхФайлов()
	
	//TODO добавить сюда ИД сеанса. Ох, и намучаюсь я с удалением мусора.
	РазделительКаталогов = РазделительКаталогов();
	
	КаталогUpload = КаталогВременныхФайлов()+"upload";
	КаталогUpload = "c:\pricat\V2\bitrix_emul\received";//отладка
	СоздатьКаталогПриНеобходимости(КаталогUpload);
	
	//опираемся на то, что для платформенного пользователя всегда существует элемент в справочнике.
	КаталогПользователя = КаталогUpload+РазделительКаталогов+СокрЛП(ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
	СоздатьКаталогПриНеобходимости(КаталогПользователя);
	
	Возврат КаталогПользователя+РазделительКаталогов;
	
КонецФункции	

Процедура ЗаписатьСодержаниеЗапросаВЖурнал(Запрос,Метод)

	Возврат;//хватит отладки, пора в прод
	
	СтрокаВЖР =	""+Запрос.БазовыйURL+"
				|"+Запрос.ОтносительныйURL+"
				|"+СтруктураВСтроку(Запрос.ПараметрыURL)+"
				|"+СтруктураВСтроку(Запрос.ПараметрыЗапроса)+"
				|"+ТипЗнч(Запрос.ПолучитьТелоКакДвоичныеДанные());

	ЗаписьЖурналаРегистрации(""+Метод+" запрос",,,,СтрокаВЖР);
	
КонецПроцедуры

Процедура НачатьОбработкуФайлов(ИмяСохраненногоФайла,ИДСеансаОбмена)
	
	// Так, здесь может быть только один файл. Но внезапно это может быть ZIP.
	Ф = Новый Файл(ИмяСохраненногоФайла);
	МассивФайловНаОбработку = Новый Массив;
	
	Если Ф.Расширение = ".zip" Тогда
		//разжать
		КаталогРаспаковки = КаталогСохраненияПолученныхФайлов()+РазделительКаталогов()+"unzip";
		СоздатьКаталогПриНеобходимости(КаталогРаспаковки);
		
		УдалитьФайлы(КаталогРаспаковки+РазделительКаталогов(),"*");
		//очистим все перед началом. И есть подозрение, что лучше все-таки делить еще и по кукам. И как-то бороться с засиранием свободного места.
		
		Чтение = Новый ЧтениеZipФайла(ИмяСохраненногоФайла);
		Чтение.ИзвлечьВсе(КаталогРаспаковки,РежимВосстановленияПутейФайловZIP.Восстанавливать);
		УдалитьФайлы(ИмяСохраненногоФайла);
		
		МассивФайловНаОбработку = НайтиФайлы(КаталогРаспаковки,"*",Истина);
		//Для Каждого Файл Из Файлы Цикл
		//	МассивФайловНаОбработку.Добавить(Файл.ПолноеИмя);
		//КонецЦикла;
		
	ИначеЕсли Ф.Расширение = ".xml" Тогда
		МассивФайловНаОбработку.Добавить(ИмяСохраненногоФайла);
	Иначе
		//а могут быть и картинки
		ВызватьИсключение "Неизвестное расширение файла: "+Ф.Имя;
	КонецЕсли;	
	
	Для Каждого Файл Из МассивФайловНаОбработку Цикл
		//не совсем понятно, что лучше: писать набором или поштучно; как быть с изображениями; писать бинарники в регистр или оставлять на диске.
		//пока - самый простой вариант.
		Запись = РегистрыСведений.СостояниеОбработкиЗагруженныхФайлов.СоздатьМенеджерЗаписи();
		
		Запись.ИДСеансаОбмена		= ИДСеансаОбмена;
		Запись.ИмяФайла				= Файл.ПолноеИмя;
		Запись.Состояние			= "progress";
		Запись.ДатаПолучения		= ТекущаяДата();
		Запись.Пользователь			= ПараметрыСеанса.ТекущийПользователь;
		Запись.ДанныеФайла			= Новый ХранилищеЗначения(Новый ДвоичныеДанные(Файл.ПолноеИмя));
		
		Попытка
			Запись.Записать();
		Исключение
			_Ошибка = ОписаниеОшибки();
			ВызватьИсключение _Ошибка;
		КонецПопытки;	
		
	КонецЦикла;
	
	//и в конце надо бы запустить фоновое задание-обновлялку. Пора на БСП?
	//кстати, что там с порядком файлов? Сначала вроде надо загружать самые import.xml, затем offers.xml, потом rests.xml и offers.xml
	//Робота, который просто будет скопом по регистру бегать, делать точно не стоит: обмен может прерваться на середине.
	
	МассивФайловДляЗадания = Новый Массив;
	Для Каждого Файл Из МассивФайловНаОбработку Цикл
		МассивФайловДляЗадания.Добавить(Файл.ПолноеИмя);
	КонецЦикла;	
	
	ПараметрыФЗ = Новый Массив;
	ПараметрыФЗ.Добавить(ИДСеансаОбмена);//ИДСеансаОбмена
	ПараметрыФЗ.Добавить(ПараметрыСеанса.ТекущийПользователь);//ИДСеансаОбмена
	ПараметрыФЗ.Добавить(МассивФайловНаОбработку);//ИДСеансаОбмена
	
	ЭмуляцияБитрикс.ВыполнитьОбновлениеКаталога(ИДСеансаОбмена,ПараметрыСеанса.ТекущийПользователь,МассивФайловДляЗадания);
//	ФоновыеЗадания.Выполнить("ЭмуляцияБитрикс.ВыполнитьОбновлениеКаталога",ПараметрыФЗ,,"Обновление каталога после получения");
	
КонецПроцедуры	

Процедура СоздатьКаталогПриНеобходимости(Каталог)
	
	Ф = Новый Файл(Каталог);
	Если НЕ Ф.Существует() Тогда
		СоздатьКаталог(Каталог);
	ИначеЕсли НЕ Ф.ЭтоКаталог()	Тогда
		ВызватьИсключение "Пытаемся создать каталог "+Каталог+", а уже существует файл с таким именем";
	КонецЕсли;
	
КонецПроцедуры

Функция РазделительКаталогов()
	//напрашивается ПовторноеИспользование
	
	СИ = Новый СистемнаяИнформация;
	Если СИ.ТипПлатформы = ТипПлатформы.Windows_x86 
		Или СИ.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		Возврат "\";
	Иначе
		Возврат "/";
	КонецЕсли;	

КонецФункции	

Функция СостояниеЗаданияОбмена(ИДСеансаОбмена,ИмяФайла)
	
	Результат = "success";
	
	Возврат Результат;
	//progress
	//success
	//failure
	
КонецФункции

Функция ИДСеансаИзЗаголовков(Заголовки)
	
	//кука будет выглядеть так: uploadId=abcd_123456_...
	Результат = "";
	
	Кука = Заголовки.Получить("Cookie");
	Если Кука=Неопределено Тогда
		ВызватьИсключение "Не установлен заголовок Cookie";
	КонецЕсли;	
	
	Результат = Сред(Кука,СтрДлина("uploadId="+1));//если будем создавать каталог с именем куки, то возникает опасность: надо валидировать текст куки
	
	//и провалидируем сразу
	_ИДСеансаОбмена = СтрЗаменить(Результат,"_","-");
	Попытка
		ИД = Новый УникальныйИдентификатор(_ИДСеансаОбмена);
	Исключение
		ВызватьИсключение "Неправильный формат ИД сеанса: "+Результат;
	КонецПопытки;	
	
	Возврат Результат;
	
КонецФункции	